/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.GarageManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.AutoMechanicEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.GarageMechanicOrganization;
import Business.UserAccount.UserAccount;
import Business.Automobile.Check;
import Business.Automobile.Automobile;
import Business.Automobile.Week;
import Business.WorkQueue.garageMechanicWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author akhilsaikoppanatham
 */
public class ManageAutomobilesJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount account;
    private Organization researchScientistOrganization;
    private EcoSystem business;

    /**
     * Creates new form ManageVolunteersJPanel
     *
     * @param userProcessContainer
     * @param userAccount
     * @param enterprise
     * @param business
     * @param researchScientistOrganization
     */
    public ManageAutomobilesJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount userAccount, Organization researchScientistOrganization, EcoSystem business, String minAge, String maxAge, String numOfVolunteers) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = userAccount;
        this.enterprise = enterprise;
        this.researchScientistOrganization = researchScientistOrganization;
        this.business = business;
        populateTable();
        populateTestsComboBox();
        populateGarageMechanic();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        bpTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rrTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tempTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        weightTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        pulseTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        bpTextField1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        rrTextField1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tempTextField1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        weightTextField1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        pulseTextField1 = new javax.swing.JTextField();
        yesBtn = new javax.swing.JRadioButton();
        noBtn = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        AutomobileJTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        test2 = new javax.swing.JComboBox<>();
        test3 = new javax.swing.JComboBox<>();
        test4 = new javax.swing.JComboBox<>();
        test1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        assignTo = new javax.swing.JLabel();
        garageMechanic = new javax.swing.JComboBox();

        jLabel5.setText("Blood pressure :");

        jLabel6.setText("Respiratory rate:");

        jLabel7.setText("Body temperature");

        jLabel8.setText("Weight");

        jLabel9.setText("Pulse rate:");

        jLabel10.setText("Blood pressure :");

        jLabel11.setText("Respiratory rate:");

        jLabel12.setText("Body temperature");

        jLabel13.setText("Weight");

        jLabel14.setText("Pulse rate:");

        yesBtn.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        yesBtn.setText("Yes");
        yesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesBtnActionPerformed(evt);
            }
        });

        noBtn.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        noBtn.setText("No");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        jLabel4.setText("Interested in Organ Donation?");

        workRequestJTable.setBackground(new java.awt.Color(204, 255, 204));
        workRequestJTable.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sender", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        setBackground(new java.awt.Color(255, 255, 255));

        AutomobileJTable.setBackground(new java.awt.Color(204, 255, 204));
        AutomobileJTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AutomobileJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Automobile", "Vehicle Age", "Mileage", "EngineRPM", "Ignition Level", "Automobile Weight", "Body Length"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(AutomobileJTable);
        if (AutomobileJTable.getColumnModel().getColumnCount() > 0) {
            AutomobileJTable.getColumnModel().getColumn(0).setResizable(false);
            AutomobileJTable.getColumnModel().getColumn(1).setResizable(false);
            AutomobileJTable.getColumnModel().getColumn(2).setResizable(false);
            AutomobileJTable.getColumnModel().getColumn(4).setResizable(false);
            AutomobileJTable.getColumnModel().getColumn(5).setResizable(false);
        }

        backBtn.setBackground(new java.awt.Color(88, 177, 159));
        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Images/back.png"))); // NOI18N
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Check 1 Test");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Check 2 Test");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Check 3 Test");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Check 4 test");

        test2.setBackground(new java.awt.Color(88, 177, 159));

        test3.setBackground(new java.awt.Color(88, 177, 159));

        test4.setBackground(new java.awt.Color(88, 177, 159));

        test1.setBackground(new java.awt.Color(88, 177, 159));

        jButton2.setBackground(new java.awt.Color(88, 177, 159));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Assign tests to Automobile");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        assignTo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        assignTo.setText("Assign to");

        garageMechanic.setBackground(new java.awt.Color(88, 177, 159));
        garageMechanic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                garageMechanicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 998, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel15)
                                    .addComponent(assignTo))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(test3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(test1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(test2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(test4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(garageMechanic, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(test1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(test2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(test3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(test4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignTo)
                    .addComponent(garageMechanic, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jButton2)
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
private void populateGarageMechanic() {
        AutoMechanicEnterprise autoMechanicEnterprise = (AutoMechanicEnterprise) enterprise;
        for (Organization o : autoMechanicEnterprise.getOrganizationDirectory().getOrganizationList()) {
            if (o.getName().equals("GarageMechanicOrganization")) {
                for (UserAccount u : o.getUserAccountDirectory().getUserAccountList()) {
                    garageMechanic.addItem(u);
                }
            }
        }
    }

    public void populateTestsComboBox() {
        AutoMechanicEnterprise autoMechanicEnterprise = (AutoMechanicEnterprise) enterprise;
        for (String test : autoMechanicEnterprise.getTestsList()) {
            test1.addItem(test);
            test2.addItem(test);
            test3.addItem(test);
            test4.addItem(test);
        }
    }

    private void populateTable() {
        AutoMechanicEnterprise autoMechanicEnterprise = (AutoMechanicEnterprise) enterprise;
        int minimumThreshold = autoMechanicEnterprise.getMinimumThreshold();
        int maximumThreshold = autoMechanicEnterprise.getMaximumThreshold();
        DefaultTableModel model = (DefaultTableModel) AutomobileJTable.getModel();
        Enterprise.EnterpriseType type = Enterprise.EnterpriseType.OutletEnterprise;
        model.setRowCount(0);
        for (Network network : business.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise.getEnterpriseType() == type) {
                    enterprise.getOrganizationDirectory().getOrganizationList().stream().filter((organization) -> (organization.getName().equals("AutomobileOrganization"))).forEachOrdered((organization) -> {
                        for (Automobile automobile : organization.getAutomobileDirectory().getAutomobileList()) {
                            try {
                                if (automobile.isPotentialAutomobile() && automobile.getAge() > minimumThreshold && automobile.getAge() < maximumThreshold) {
                                    if (automobile.getSelectedBy().equals("") || automobile.getSelectedBy() == null) {
                                        Object[] row = new Object[7];
                                        row[0] = automobile;
                                        row[1] = automobile.getAge();
                                        row[2] = automobile.getCurrentSpecification().getMileage();
                                        row[3] = automobile.getCurrentSpecification().getEngineRPM();
                                        row[4] = automobile.getCurrentSpecification().getIgnitionLevel();
                                        row[5] = automobile.getCurrentSpecification().getAutomobileWeight();
                                        row[6] = automobile.getCurrentSpecification().getBodyLength();
                                        model.addRow(row);
                                    }
                                }
                            } catch (Exception e) {
                                Object[] row = new Object[7];
                                row[0] = automobile;
                                row[1] = automobile.getAge();
                                row[2] = automobile.getCurrentSpecification().getMileage();
                                row[3] = automobile.getCurrentSpecification().getEngineRPM();
                                row[4] = automobile.getCurrentSpecification().getIgnitionLevel();
                                row[5] = automobile.getCurrentSpecification().getAutomobileWeight();
                                row[6] = automobile.getCurrentSpecification().getBodyLength();
                                model.addRow(row);
                            }
                        }
                    });
                }

            }

        }
    }
    private void yesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yesBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = AutomobileJTable.getSelectedRow();

        if (selectedRow < 0) {

            JOptionPane.showMessageDialog(null, "Please select a row to process");
            return;
        }

        String test11 = (String) (test1.getSelectedItem());
        String test12 = (String) (test2.getSelectedItem());
        String test13 = (String) (test3.getSelectedItem());
        String test14 = (String) (test4.getSelectedItem());

        Automobile automobile = (Automobile) AutomobileJTable.getValueAt(selectedRow, 0);
        AutoMechanicEnterprise autoMechanicEnterprise = (AutoMechanicEnterprise) enterprise;
        if (autoMechanicEnterprise.getAutomobileNumber() == 0) {
            JOptionPane.showMessageDialog(null, "You have already selected required number of Automobiles");
            return;
        };
        for (Organization organization : autoMechanicEnterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization.getName().equals("GarageMechanicOrganization")) {
                for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
                    garageMechanicWorkRequest garageMechanicWorkRequest = (garageMechanicWorkRequest) request;
                    try {
                        if (garageMechanicWorkRequest.getAutomobileName().equals(automobile.getName())) {
                            JOptionPane.showMessageDialog(null, "Request has already been sent for this Automobile");
                            return;
                        }
                    } catch (Exception e) {

                    }
                }
            }
        }
        automobile.setSelectedBy(enterprise.getName());
        automobile.setGarageStatus("initialized");
        Check check1 = automobile.createCheck();
        check1.setCheckName("Check1");
        check1.setTest(test11);
        check1.setCheckStatus("initialized");
        Week week11 = check1.createWeek();
        Week week12 = check1.createWeek();
        Week week13 = check1.createWeek();
        Week week14 = check1.createWeek();
        week11.setWeekName("week1");
        week11.setWeekStatus("initialized");
        week12.setWeekName("week2");
        week12.setWeekStatus("initialized");
        week13.setWeekName("week3");
        week13.setWeekStatus("initialized");
        week14.setWeekName("week4");
        week14.setWeekStatus("initialized");

        //------------------------------------------------------------------
        Check check2 = automobile.createCheck();
        check2.setCheckName("Check2");
        check2.setTest(test12);
        check2.setCheckStatus("initialized");
        Week week21 = check2.createWeek();
        Week week22 = check2.createWeek();
        Week week23 = check2.createWeek();
        Week week24 = check2.createWeek();
        week21.setWeekName("week1");
        week21.setWeekStatus("initialized");
        week22.setWeekName("week2");
        week22.setWeekStatus("initialized");
        week23.setWeekName("week3");
        week23.setWeekStatus("initialized");
        week24.setWeekName("week4");
        week24.setWeekStatus("initialized");

        //--------------------------------------------------------------
        Check check3 = automobile.createCheck();
        check3.setCheckName("Check3");
        check3.setTest(test13);
        check3.setCheckStatus("initialized");
        Week week31 = check3.createWeek();
        Week week32 = check3.createWeek();
        Week week33 = check3.createWeek();
        Week week34 = check3.createWeek();
        week31.setWeekName("week1");
        week31.setWeekStatus("initialized");
        week32.setWeekName("week2");
        week32.setWeekStatus("initialized");
        week33.setWeekName("week3");
        week33.setWeekStatus("initialized");
        week34.setWeekName("week4");
        week34.setWeekStatus("initialized");

        //----------------------------------------------------------------
        Check check4 = automobile.createCheck();
        check4.setCheckName("Check4");
        check4.setTest(test14);
        check4.setCheckStatus("initialized");
        Week week41 = check4.createWeek();
        Week week42 = check4.createWeek();
        Week week43 = check4.createWeek();
        Week week44 = check4.createWeek();
        week41.setWeekName("week1");
        week41.setWeekStatus("initialized");
        week42.setWeekName("week2");
        week42.setWeekStatus("initialized");
        week43.setWeekName("week3");
        week43.setWeekStatus("initialized");
        week44.setWeekName("week4");
        week44.setWeekStatus("initialized");
//------------------------------------------------------------------------------

        garageMechanicWorkRequest request = new garageMechanicWorkRequest();
        UserAccount garageMechanic1 = (UserAccount) (garageMechanic.getSelectedItem());

        request.setMessage("Garage Mechanic - please Perform Assigned Tests check the status of Automobile!!");
        request.setSender(account);
        request.setStatus("Sent");
        request.setReceiver(garageMechanic1);
        String name = automobile.getName();
        request.setAutomobileName(name);
        Organization o = null;
        for (Network n : business.getNetworkList()) {

            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                if (e instanceof AutoMechanicEnterprise) {
                    for (Organization org : e.getOrganizationDirectory().getOrganizationList()) {
                        if (org instanceof GarageMechanicOrganization) {
                            o = org;

                        }
                    }
                }
            }
        }
        if (o != null) {
            o.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
            JOptionPane.showMessageDialog(null, "Garage Mechanic assigned successfully");
            autoMechanicEnterprise.setAutomobileNumber(autoMechanicEnterprise.getAutomobileNumber() - 1);
            return;
        } else {
            JOptionPane.showMessageDialog(null, "Garage Mechanic Organization doesn't exist for this enterprise");
            return;
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void garageMechanicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_garageMechanicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_garageMechanicActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AutomobileJTable;
    private javax.swing.JLabel assignTo;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField bpTextField;
    private javax.swing.JTextField bpTextField1;
    private javax.swing.JComboBox garageMechanic;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton noBtn;
    private javax.swing.JTextField pulseTextField;
    private javax.swing.JTextField pulseTextField1;
    private javax.swing.JTextField rrTextField;
    private javax.swing.JTextField rrTextField1;
    private javax.swing.JTextField tempTextField;
    private javax.swing.JTextField tempTextField1;
    private javax.swing.JComboBox<String> test1;
    private javax.swing.JComboBox<String> test2;
    private javax.swing.JComboBox<String> test3;
    private javax.swing.JComboBox<String> test4;
    private javax.swing.JTextField weightTextField;
    private javax.swing.JTextField weightTextField1;
    private javax.swing.JTable workRequestJTable;
    private javax.swing.JRadioButton yesBtn;
    // End of variables declaration//GEN-END:variables
}
